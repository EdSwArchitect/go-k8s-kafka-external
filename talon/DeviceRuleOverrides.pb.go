// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.13.0
// source: DeviceRuleOverrides.proto

package talon

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DeviceRuleOverridesMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpAddress    *string `protobuf:"bytes,1,opt,name=ipAddress" json:"ipAddress,omitempty"`         // the IPv4 address that is associated with the event
	IpNum        *int64  `protobuf:"varint,2,opt,name=ipNum" json:"ipNum,omitempty"`                // an integer that represents the IP address
	Hostname     *string `protobuf:"bytes,3,opt,name=hostname" json:"hostname,omitempty"`           // the host name that is associated with the event
	MacAddress   *string `protobuf:"bytes,4,opt,name=macAddress" json:"macAddress,omitempty"`       // the media access control address that is associated with the device
	Os           *string `protobuf:"bytes,5,opt,name=os" json:"os,omitempty"`                       // the operating system that is associated with the device
	PeerGroup    *string `protobuf:"bytes,6,opt,name=peerGroup" json:"peerGroup,omitempty"`         // the assigned peer group of the user that is associated with the device activity event
	DeviceType   *string `protobuf:"bytes,7,opt,name=deviceType" json:"deviceType,omitempty"`       // the device type that is associated with the device activity event
	HVE          *int32  `protobuf:"varint,8,opt,name=HVE" json:"HVE,omitempty"`                    // the high-value entity value that is associated with the user
	BizProc      *string `protobuf:"bytes,9,opt,name=bizProc" json:"bizProc,omitempty"`             // the business process that is associated with the user
	IsUserDevice *int32  `protobuf:"varint,10,opt,name=isUserDevice" json:"isUserDevice,omitempty"` // a flag that indicates whether the device is a user device
	IsIOT        *int32  `protobuf:"varint,11,opt,name=isIOT" json:"isIOT,omitempty"`               // a flag that indicates whether the device is an IOT device
	IsManaged    *int32  `protobuf:"varint,12,opt,name=isManaged" json:"isManaged,omitempty"`       // a flag that indicates whether the device is a managed device
}

func (x *DeviceRuleOverridesMsg) Reset() {
	*x = DeviceRuleOverridesMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeviceRuleOverrides_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceRuleOverridesMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceRuleOverridesMsg) ProtoMessage() {}

func (x *DeviceRuleOverridesMsg) ProtoReflect() protoreflect.Message {
	mi := &file_DeviceRuleOverrides_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceRuleOverridesMsg.ProtoReflect.Descriptor instead.
func (*DeviceRuleOverridesMsg) Descriptor() ([]byte, []int) {
	return file_DeviceRuleOverrides_proto_rawDescGZIP(), []int{0}
}

func (x *DeviceRuleOverridesMsg) GetIpAddress() string {
	if x != nil && x.IpAddress != nil {
		return *x.IpAddress
	}
	return ""
}

func (x *DeviceRuleOverridesMsg) GetIpNum() int64 {
	if x != nil && x.IpNum != nil {
		return *x.IpNum
	}
	return 0
}

func (x *DeviceRuleOverridesMsg) GetHostname() string {
	if x != nil && x.Hostname != nil {
		return *x.Hostname
	}
	return ""
}

func (x *DeviceRuleOverridesMsg) GetMacAddress() string {
	if x != nil && x.MacAddress != nil {
		return *x.MacAddress
	}
	return ""
}

func (x *DeviceRuleOverridesMsg) GetOs() string {
	if x != nil && x.Os != nil {
		return *x.Os
	}
	return ""
}

func (x *DeviceRuleOverridesMsg) GetPeerGroup() string {
	if x != nil && x.PeerGroup != nil {
		return *x.PeerGroup
	}
	return ""
}

func (x *DeviceRuleOverridesMsg) GetDeviceType() string {
	if x != nil && x.DeviceType != nil {
		return *x.DeviceType
	}
	return ""
}

func (x *DeviceRuleOverridesMsg) GetHVE() int32 {
	if x != nil && x.HVE != nil {
		return *x.HVE
	}
	return 0
}

func (x *DeviceRuleOverridesMsg) GetBizProc() string {
	if x != nil && x.BizProc != nil {
		return *x.BizProc
	}
	return ""
}

func (x *DeviceRuleOverridesMsg) GetIsUserDevice() int32 {
	if x != nil && x.IsUserDevice != nil {
		return *x.IsUserDevice
	}
	return 0
}

func (x *DeviceRuleOverridesMsg) GetIsIOT() int32 {
	if x != nil && x.IsIOT != nil {
		return *x.IsIOT
	}
	return 0
}

func (x *DeviceRuleOverridesMsg) GetIsManaged() int32 {
	if x != nil && x.IsManaged != nil {
		return *x.IsManaged
	}
	return 0
}

var File_DeviceRuleOverrides_proto protoreflect.FileDescriptor

var file_DeviceRuleOverrides_proto_rawDesc = []byte{
	0x0a, 0x19, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x4f, 0x76, 0x65, 0x72,
	0x72, 0x69, 0x64, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xda, 0x02, 0x0a, 0x16,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69,
	0x64, 0x65, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x70, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x70, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f,
	0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f,
	0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x65, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x65, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x48, 0x56, 0x45, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x48, 0x56, 0x45, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x69, 0x7a, 0x50, 0x72, 0x6f,
	0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x50, 0x72, 0x6f, 0x63,
	0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x69, 0x73, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x49, 0x4f, 0x54, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x73, 0x49, 0x4f, 0x54, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69,
	0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x42, 0x31, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e,
	0x73, 0x61, 0x73, 0x2e, 0x63, 0x79, 0x62, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x13, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75,
	0x6c, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73,
}

var (
	file_DeviceRuleOverrides_proto_rawDescOnce sync.Once
	file_DeviceRuleOverrides_proto_rawDescData = file_DeviceRuleOverrides_proto_rawDesc
)

func file_DeviceRuleOverrides_proto_rawDescGZIP() []byte {
	file_DeviceRuleOverrides_proto_rawDescOnce.Do(func() {
		file_DeviceRuleOverrides_proto_rawDescData = protoimpl.X.CompressGZIP(file_DeviceRuleOverrides_proto_rawDescData)
	})
	return file_DeviceRuleOverrides_proto_rawDescData
}

var file_DeviceRuleOverrides_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_DeviceRuleOverrides_proto_goTypes = []interface{}{
	(*DeviceRuleOverridesMsg)(nil), // 0: DeviceRuleOverridesMsg
}
var file_DeviceRuleOverrides_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_DeviceRuleOverrides_proto_init() }
func file_DeviceRuleOverrides_proto_init() {
	if File_DeviceRuleOverrides_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_DeviceRuleOverrides_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceRuleOverridesMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_DeviceRuleOverrides_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_DeviceRuleOverrides_proto_goTypes,
		DependencyIndexes: file_DeviceRuleOverrides_proto_depIdxs,
		MessageInfos:      file_DeviceRuleOverrides_proto_msgTypes,
	}.Build()
	File_DeviceRuleOverrides_proto = out.File
	file_DeviceRuleOverrides_proto_rawDesc = nil
	file_DeviceRuleOverrides_proto_goTypes = nil
	file_DeviceRuleOverrides_proto_depIdxs = nil
}
