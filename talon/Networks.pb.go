// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.13.0
// source: Networks.proto

package talon

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type NetworksMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkId    *string  `protobuf:"bytes,1,opt,name=networkId" json:"networkId,omitempty"`         // the network primary key that is associated with the IP address location, which is used to link a device to a network in a database
	Range        *string  `protobuf:"bytes,2,opt,name=range" json:"range,omitempty"`                 // the network CIDR range
	SiteCode     *string  `protobuf:"bytes,3,opt,name=siteCode" json:"siteCode,omitempty"`           // the site code that is associated with the network
	Country      *string  `protobuf:"bytes,4,opt,name=country" json:"country,omitempty"`             // the name of the country that is associated with the network
	Region       *string  `protobuf:"bytes,5,opt,name=region" json:"region,omitempty"`               // the region that is associated with the network
	City         *string  `protobuf:"bytes,6,opt,name=city" json:"city,omitempty"`                   // the city that is associated with the network
	Latitude     *float64 `protobuf:"fixed64,7,opt,name=latitude" json:"latitude,omitempty"`         // the latitude that is associated with the network
	Longitude    *float64 `protobuf:"fixed64,8,opt,name=longitude" json:"longitude,omitempty"`       // the longitude that is associated with the network
	TzOffset     *int32   `protobuf:"varint,9,opt,name=tzOffset" json:"tzOffset,omitempty"`          // the time zone offset for the network
	Name         *string  `protobuf:"bytes,10,opt,name=name" json:"name,omitempty"`                  // the name of the network
	Type         *string  `protobuf:"bytes,11,opt,name=type" json:"type,omitempty"`                  // the type of the network
	Low          *int64   `protobuf:"varint,12,opt,name=low" json:"low,omitempty"`                   // the low end of the IP address range as an unsigned integer
	High         *int64   `protobuf:"varint,13,opt,name=high" json:"high,omitempty"`                 // the high end of the IP address range as an unsigned integer
	Os           *string  `protobuf:"bytes,14,opt,name=os" json:"os,omitempty"`                      // the device operating system
	PeerGroup    *string  `protobuf:"bytes,15,opt,name=peerGroup" json:"peerGroup,omitempty"`        // the assigned peer group of the user that is associated with the device activity event
	DeviceType   *string  `protobuf:"bytes,16,opt,name=deviceType" json:"deviceType,omitempty"`      // the device type that is associated with the device activity event
	HVE          *int32   `protobuf:"varint,17,opt,name=HVE" json:"HVE,omitempty"`                   // the high-value entity value that is associated with the user
	BizProc      *string  `protobuf:"bytes,18,opt,name=bizProc" json:"bizProc,omitempty"`            // the business process that is associated with the user
	IsUserDevice *int32   `protobuf:"varint,19,opt,name=isUserDevice" json:"isUserDevice,omitempty"` // a flag that indicates whether the device is a user device
	IsIOT        *int32   `protobuf:"varint,20,opt,name=isIOT" json:"isIOT,omitempty"`               // a flag that indicates whether the device is an IOT device
	IsManaged    *int32   `protobuf:"varint,21,opt,name=isManaged" json:"isManaged,omitempty"`       // a flag that indicates whether the device is a managed device
}

func (x *NetworksMsg) Reset() {
	*x = NetworksMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Networks_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworksMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworksMsg) ProtoMessage() {}

func (x *NetworksMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Networks_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworksMsg.ProtoReflect.Descriptor instead.
func (*NetworksMsg) Descriptor() ([]byte, []int) {
	return file_Networks_proto_rawDescGZIP(), []int{0}
}

func (x *NetworksMsg) GetNetworkId() string {
	if x != nil && x.NetworkId != nil {
		return *x.NetworkId
	}
	return ""
}

func (x *NetworksMsg) GetRange() string {
	if x != nil && x.Range != nil {
		return *x.Range
	}
	return ""
}

func (x *NetworksMsg) GetSiteCode() string {
	if x != nil && x.SiteCode != nil {
		return *x.SiteCode
	}
	return ""
}

func (x *NetworksMsg) GetCountry() string {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return ""
}

func (x *NetworksMsg) GetRegion() string {
	if x != nil && x.Region != nil {
		return *x.Region
	}
	return ""
}

func (x *NetworksMsg) GetCity() string {
	if x != nil && x.City != nil {
		return *x.City
	}
	return ""
}

func (x *NetworksMsg) GetLatitude() float64 {
	if x != nil && x.Latitude != nil {
		return *x.Latitude
	}
	return 0
}

func (x *NetworksMsg) GetLongitude() float64 {
	if x != nil && x.Longitude != nil {
		return *x.Longitude
	}
	return 0
}

func (x *NetworksMsg) GetTzOffset() int32 {
	if x != nil && x.TzOffset != nil {
		return *x.TzOffset
	}
	return 0
}

func (x *NetworksMsg) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *NetworksMsg) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *NetworksMsg) GetLow() int64 {
	if x != nil && x.Low != nil {
		return *x.Low
	}
	return 0
}

func (x *NetworksMsg) GetHigh() int64 {
	if x != nil && x.High != nil {
		return *x.High
	}
	return 0
}

func (x *NetworksMsg) GetOs() string {
	if x != nil && x.Os != nil {
		return *x.Os
	}
	return ""
}

func (x *NetworksMsg) GetPeerGroup() string {
	if x != nil && x.PeerGroup != nil {
		return *x.PeerGroup
	}
	return ""
}

func (x *NetworksMsg) GetDeviceType() string {
	if x != nil && x.DeviceType != nil {
		return *x.DeviceType
	}
	return ""
}

func (x *NetworksMsg) GetHVE() int32 {
	if x != nil && x.HVE != nil {
		return *x.HVE
	}
	return 0
}

func (x *NetworksMsg) GetBizProc() string {
	if x != nil && x.BizProc != nil {
		return *x.BizProc
	}
	return ""
}

func (x *NetworksMsg) GetIsUserDevice() int32 {
	if x != nil && x.IsUserDevice != nil {
		return *x.IsUserDevice
	}
	return 0
}

func (x *NetworksMsg) GetIsIOT() int32 {
	if x != nil && x.IsIOT != nil {
		return *x.IsIOT
	}
	return 0
}

func (x *NetworksMsg) GetIsManaged() int32 {
	if x != nil && x.IsManaged != nil {
		return *x.IsManaged
	}
	return 0
}

var File_Networks_proto protoreflect.FileDescriptor

var file_Networks_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x99, 0x04, 0x0a, 0x0b, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x4d, 0x73, 0x67,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x7a, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x74, 0x7a, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x65,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x65, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x48, 0x56, 0x45, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x48, 0x56, 0x45, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x69,
	0x7a, 0x50, 0x72, 0x6f, 0x63, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x69, 0x7a,
	0x50, 0x72, 0x6f, 0x63, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x69, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x49, 0x4f,
	0x54, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x73, 0x49, 0x4f, 0x54, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x69, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x42, 0x26, 0x0a, 0x1a,
	0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x61, 0x73, 0x2e, 0x63, 0x79, 0x62, 0x65, 0x72, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x08, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x73,
}

var (
	file_Networks_proto_rawDescOnce sync.Once
	file_Networks_proto_rawDescData = file_Networks_proto_rawDesc
)

func file_Networks_proto_rawDescGZIP() []byte {
	file_Networks_proto_rawDescOnce.Do(func() {
		file_Networks_proto_rawDescData = protoimpl.X.CompressGZIP(file_Networks_proto_rawDescData)
	})
	return file_Networks_proto_rawDescData
}

var file_Networks_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_Networks_proto_goTypes = []interface{}{
	(*NetworksMsg)(nil), // 0: NetworksMsg
}
var file_Networks_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_Networks_proto_init() }
func file_Networks_proto_init() {
	if File_Networks_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Networks_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworksMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Networks_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Networks_proto_goTypes,
		DependencyIndexes: file_Networks_proto_depIdxs,
		MessageInfos:      file_Networks_proto_msgTypes,
	}.Build()
	File_Networks_proto = out.File
	file_Networks_proto_rawDesc = nil
	file_Networks_proto_goTypes = nil
	file_Networks_proto_depIdxs = nil
}
